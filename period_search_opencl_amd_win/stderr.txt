19:58:41 (37528): Can't open init data file - running in standalone mode
Platform vendor: NVIDIA Corporation
OpenCL version: OpenCL C 1.2  | OpenCL 1.2 CUDA
OpenCL Device number : 0
OpenCl Device name: GeForce GTX 1050 Ti 4096MB
Multiprocessors: 6
Max Samplers: 32
Max work item dimensions: 3
CL_DEVICE_EXTENSIONScl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_d3d10_sharing cl_khr_d3d10_sharing cl_nv_d3d11_sharing cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
Build log for GeForce GTX 1050 Ti:
<kernel>:7:18: error: parameter may not be qualified with an address space
        __global double freq,
                        ^
<kernel>:8:15: error: parameter may not be qualified with an address space
        __global int isInvalid,
                     ^
<kernel>:15:2: error: use of undeclared identifier 'int_t'
        int_t n = n_start + idx;
        ^
<kernel>:21:6: error: use of undeclared identifier 'n'
        if (n > n_max)
            ^
<kernel>:31:23: error: use of undeclared identifier 'n'
        freq = freq_start - (n - 1) * freq_step;
                             ^
<kernel>:43:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:43:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:43:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:44:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:44:25: error: use of undeclared identifier 'CUDA_FR'; did you mean 'CUDA_LFR'?
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^~~~~~~
                               CUDA_LFR
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:44:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                                       ^
<kernel>:46:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid)
             ^~~~~~~~~
<kernel>:48:3: warning: implicit declaration of function 'atomicAdd' is invalid in C99
                atomicAdd(&CUDA_End, 1);
                ^
<kernel>:48:14: error: use of undeclared identifier 'CUDA_End'
                atomicAdd(&CUDA_End, 1);
                           ^
<kernel>:49:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).isReported = 0; //signal not to read result
                 ^~~~~~~~~
<kernel>:54:13: warning: type specifier missing, defaults to 'int'
        const auto period = 1 / (*CUDA_LCC).freq;
        ~~~~~~~~~~ ^
<kernel>:54:27: error: indirection requires pointer operand ('int' invalid)
        const auto period = 1 / (*CUDA_LCC).freq;
                                 ^~~~~~~~~
<kernel>:57:12: warning: type specifier missing, defaults to 'int'
        for (auto i = 1; i <= CUDA_Ncoef; i++)
             ~~~~ ^
<kernel>:57:24: error: use of undeclared identifier 'CUDA_Ncoef'
        for (auto i = 1; i <= CUDA_Ncoef; i++)
                              ^
<kernel>:59:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LCC).cg[i] = CUDA_cg_first[i];
                 ^~~~~~~~~
<kernel>:59:23: error: use of undeclared identifier 'CUDA_cg_first'
                (*CUDA_LCC).cg[i] = CUDA_cg_first[i];
                                    ^
<kernel>:62:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = CUDA_beta_pole[m];
         ^~~~~~~~~
<kernel>:62:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = CUDA_beta_pole[m];
                       ^
<kernel>:62:35: error: use of undeclared identifier 'CUDA_beta_pole'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = CUDA_beta_pole[m];
                                         ^
<kernel>:63:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = CUDA_lambda_pole[m];
         ^~~~~~~~~
<kernel>:63:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = CUDA_lambda_pole[m];
                       ^
<kernel>:63:35: error: use of undeclared identifier 'CUDA_lambda_pole'
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = CUDA_lambda_pole[m];
                                         ^
<kernel>:66:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = 90 - (*CUDA_LCC).cg[CUDA_Ncoef + 1];
         ^~~~~~~~~
<kernel>:66:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = 90 - (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                       ^
<kernel>:66:41: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = 90 - (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                               ^~~~~~~~~
<kernel>:66:55: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = 90 - (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                                             ^
<kernel>:69:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
         ^~~~~~~~~
<kernel>:69:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                       ^
<kernel>:69:35: error: use of undeclared identifier 'DEG2RAD'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                         ^
<kernel>:69:46: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                                    ^~~~~~~~~
<kernel>:69:60: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 1] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                                                  ^
<kernel>:70:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
         ^~~~~~~~~
<kernel>:70:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                       ^
<kernel>:70:35: error: use of undeclared identifier 'DEG2RAD'
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                                         ^
<kernel>:70:46: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                                                    ^~~~~~~~~
<kernel>:70:60: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 2] = DEG2RAD * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                                                                  ^
<kernel>:73:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 3] = 24 * 2 * PI / period;
         ^~~~~~~~~
<kernel>:73:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3] = 24 * 2 * PI / period;
                       ^
<kernel>:73:44: error: use of undeclared identifier 'PI'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3] = 24 * 2 * PI / period;
                                                  ^
<kernel>:75:12: warning: type specifier missing, defaults to 'int'
        for (auto i = 1; i <= CUDA_Nphpar; i++)
             ~~~~ ^
<kernel>:75:24: error: use of undeclared identifier 'CUDA_Nphpar'
        for (auto i = 1; i <= CUDA_Nphpar; i++)
                              ^
<kernel>:77:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LCC).cg[CUDA_Ncoef + 3 + i] = CUDA_par[i];
                 ^~~~~~~~~
<kernel>:77:18: error: use of undeclared identifier 'CUDA_Ncoef'
                (*CUDA_LCC).cg[CUDA_Ncoef + 3 + i] = CUDA_par[i];
                               ^
<kernel>:77:40: error: use of undeclared identifier 'CUDA_par'
                (*CUDA_LCC).cg[CUDA_Ncoef + 3 + i] = CUDA_par[i];
                                                     ^
<kernel>:82:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 2] = 1;
         ^~~~~~~~~
<kernel>:82:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 2] = 1;
                       ^
<kernel>:82:34: error: use of undeclared identifier 'CUDA_Nphpar'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 2] = 1;
                                        ^
<kernel>:84:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 1] = log(CUDA_cl);
         ^~~~~~~~~
<kernel>:84:17: error: use of undeclared identifier 'CUDA_Ncoef'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 1] = log(CUDA_cl);
                       ^
<kernel>:84:34: error: use of undeclared identifier 'CUDA_Nphpar'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 1] = log(CUDA_cl);
                                        ^
<kernel>:84:57: error: use of undeclared identifier 'CUDA_cl'
        (*CUDA_LCC).cg[CUDA_Ncoef + 3 + CUDA_Nphpar + 1] = log(CUDA_cl);
                                                               ^
<kernel>:89:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).rchisq = -1;
         ^~~~~~~~~
<kernel>:90:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Alamda = -1;
         ^~~~~~~~~
<kernel>:91:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Niter = 0;
         ^~~~~~~~~
<kernel>:92:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).iter_diff = 1e40;
         ^~~~~~~~~
<kernel>:93:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).dev_old = 1e30;
         ^~~~~~~~~
<kernel>:94:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).dev_new = 0;
         ^~~~~~~~~
<kernel>:96:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LFR).isReported = 0;
         ^~~~~~~~~
<kernel>:101:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:101:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:101:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:101:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:102:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:102:25: error: use of undeclared identifier 'CUDA_FR'; did you mean 'CUDA_LFR'?
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^~~~~~~
                               CUDA_LFR
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:102:25: error: reference to local variable 'CUDA_LFR' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:102:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                                       ^
<kernel>:104:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid)
             ^~~~~~~~~
<kernel>:109:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
         ^~~~~~~~~
<kernel>:109:27: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
                                 ^~~~~~~~~
<kernel>:109:46: error: use of undeclared identifier 'CUDA_n_iter_max'
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
                                                    ^
<kernel>:109:68: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
                                                                          ^~~~~~~~~
<kernel>:109:91: error: use of undeclared identifier 'CUDA_iter_diff_max'
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
                                                                                                 ^
<kernel>:109:117: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
                                                                                                                           ^~~~~~~~~
<kernel>:109:136: error: use of undeclared identifier 'CUDA_n_iter_min'
        (*CUDA_LCC).isNiter = (((*CUDA_LCC).Niter < CUDA_n_iter_max) && ((*CUDA_LCC).iter_diff > CUDA_iter_diff_max)) || ((*CUDA_LCC).Niter < CUDA_n_iter_min);
                                                                                                                                              ^
<kernel>:111:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isNiter)
             ^~~~~~~~~
<kernel>:113:8: error: indirection requires pointer operand ('int' invalid)
                if ((*CUDA_LCC).Alamda < 0)
                     ^~~~~~~~~
<kernel>:115:5: error: indirection requires pointer operand ('int' invalid)
                        (*CUDA_LCC).isAlamda = 1;
                         ^~~~~~~~~
<kernel>:116:5: error: indirection requires pointer operand ('int' invalid)
                        (*CUDA_LCC).Alamda = CUDA_Alamda_start; /* initial alambda */
                         ^~~~~~~~~
<kernel>:116:25: error: use of undeclared identifier 'CUDA_Alamda_start'
                        (*CUDA_LCC).Alamda = CUDA_Alamda_start; /* initial alambda */
                                             ^
<kernel>:119:5: error: indirection requires pointer operand ('int' invalid)
                        (*CUDA_LCC).isAlamda = 0;
                         ^~~~~~~~~
<kernel>:123:9: error: indirection requires pointer operand ('int' invalid)
                if (!(*CUDA_LFR).isReported)
                      ^~~~~~~~~
<kernel>:125:15: error: use of undeclared identifier 'CUDA_End'
                        atomicAdd(&CUDA_End, 1);
                                   ^
<kernel>:133:5: error: indirection requires pointer operand ('int' invalid)
                        (*CUDA_LFR).isReported = 1;
                         ^~~~~~~~~
<kernel>:141:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:141:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:141:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:141:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:143:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:145:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:147:14: error: use of undeclared identifier 'CUDA_BLOCK_DIM'
        int block = CUDA_BLOCK_DIM;
                    ^
<kernel>:148:16: warning: implicit declaration of function 'mrqmin_1_end' is invalid in C99
        /*gauss_err=*/mrqmin_1_end(CUDA_LCC, CUDA_ma, CUDA_mfit, CUDA_mfit1, block);
                      ^
<kernel>:148:39: error: use of undeclared identifier 'CUDA_ma'
        /*gauss_err=*/mrqmin_1_end(CUDA_LCC, CUDA_ma, CUDA_mfit, CUDA_mfit1, block);
                                             ^
<kernel>:153:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:153:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:153:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:153:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:155:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:157:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:159:2: warning: implicit declaration of function 'mrqmin_2_end' is invalid in C99
        mrqmin_2_end(CUDA_LCC, CUDA_ia, CUDA_ma);
        ^
<kernel>:159:25: error: use of undeclared identifier 'CUDA_ia'
        mrqmin_2_end(CUDA_LCC, CUDA_ia, CUDA_ma);
                               ^
<kernel>:160:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Niter++;
         ^~~~~~~~~
<kernel>:165:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:165:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:165:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:165:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:167:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:169:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:171:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isAlamda) return;
              ^~~~~~~~~
<kernel>:173:2: warning: implicit declaration of function 'mrqcof_start' is invalid in C99
        mrqcof_start(CUDA_LCC, (*CUDA_LCC).cg, (*CUDA_LCC).alpha, (*CUDA_LCC).beta);
        ^
<kernel>:173:26: error: indirection requires pointer operand ('int' invalid)
        mrqcof_start(CUDA_LCC, (*CUDA_LCC).cg, (*CUDA_LCC).alpha, (*CUDA_LCC).beta);
                                ^~~~~~~~~
<kernel>:178:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:178:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:178:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:178:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:180:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:182:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:184:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isAlamda) return;
              ^~~~~~~~~
<kernel>:186:2: warning: implicit declaration of function 'mrqcof_matrix' is invalid in C99
        mrqcof_matrix(CUDA_LCC, (*CUDA_LCC).cg, lpoints);
        ^
<kernel>:186:27: error: indirection requires pointer operand ('int' invalid)
        mrqcof_matrix(CUDA_LCC, (*CUDA_LCC).cg, lpoints);
                                 ^~~~~~~~~
<kernel>:191:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:191:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:191:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:191:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:193:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:195:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:197:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isAlamda) return;
              ^~~~~~~~~
<kernel>:199:2: warning: implicit declaration of function 'mrqcof_curve1' is invalid in C99
        mrqcof_curve1(CUDA_LCC, (*CUDA_LCC).cg, (*CUDA_LCC).alpha, (*CUDA_LCC).beta, inrel, lpoints);
        ^
<kernel>:199:27: error: indirection requires pointer operand ('int' invalid)
        mrqcof_curve1(CUDA_LCC, (*CUDA_LCC).cg, (*CUDA_LCC).alpha, (*CUDA_LCC).beta, inrel, lpoints);
                                 ^~~~~~~~~
<kernel>:204:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:204:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:204:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:204:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:206:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:208:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:210:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isAlamda) return;
              ^~~~~~~~~
<kernel>:212:2: warning: implicit declaration of function 'mrqcof_curve1_last' is invalid in C99
        mrqcof_curve1_last(CUDA_LCC, (*CUDA_LCC).cg, (*CUDA_LCC).alpha, (*CUDA_LCC).beta, inrel, lpoints);
        ^
<kernel>:212:32: error: indirection requires pointer operand ('int' invalid)
        mrqcof_curve1_last(CUDA_LCC, (*CUDA_LCC).cg, (*CUDA_LCC).alpha, (*CUDA_LCC).beta, inrel, lpoints);
                                      ^~~~~~~~~
<kernel>:217:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:217:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:217:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:217:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:219:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:221:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:223:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isAlamda) return;
              ^~~~~~~~~
<kernel>:225:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Ochisq = mrqcof_end(CUDA_LCC, (*CUDA_LCC).alpha);
         ^~~~~~~~~
<kernel>:225:23: warning: implicit declaration of function 'mrqcof_end' is invalid in C99
        (*CUDA_LCC).Ochisq = mrqcof_end(CUDA_LCC, (*CUDA_LCC).alpha);
                             ^
<kernel>:225:45: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Ochisq = mrqcof_end(CUDA_LCC, (*CUDA_LCC).alpha);
                                                   ^~~~~~~~~
<kernel>:230:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:230:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:230:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:230:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:232:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:234:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:236:26: error: indirection requires pointer operand ('int' invalid)
        mrqcof_start(CUDA_LCC, (*CUDA_LCC).atry, (*CUDA_LCC).covar, (*CUDA_LCC).da);
                                ^~~~~~~~~
<kernel>:241:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:241:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:241:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:241:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:243:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:245:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:247:27: error: indirection requires pointer operand ('int' invalid)
        mrqcof_matrix(CUDA_LCC, (*CUDA_LCC).atry, lpoints);
                                 ^~~~~~~~~
<kernel>:252:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:252:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:252:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:252:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:254:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:256:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:258:27: error: indirection requires pointer operand ('int' invalid)
        mrqcof_curve1(CUDA_LCC, (*CUDA_LCC).atry, (*CUDA_LCC).covar, (*CUDA_LCC).da, inrel, lpoints);
                                 ^~~~~~~~~
<kernel>:263:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:263:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:263:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:263:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:265:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:267:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:269:32: error: indirection requires pointer operand ('int' invalid)
        mrqcof_curve1_last(CUDA_LCC, (*CUDA_LCC).atry, (*CUDA_LCC).covar, (*CUDA_LCC).da, inrel, lpoints);
                                      ^~~~~~~~~
<kernel>:274:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:274:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:274:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:274:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:276:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:278:8: error: indirection requires pointer operand ('int' invalid)
        if (!(*CUDA_LCC).isNiter) return;
              ^~~~~~~~~
<kernel>:280:3: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Chisq = mrqcof_end(CUDA_LCC, (*CUDA_LCC).covar);
         ^~~~~~~~~
<kernel>:280:44: error: indirection requires pointer operand ('int' invalid)
        (*CUDA_LCC).Chisq = mrqcof_end(CUDA_LCC, (*CUDA_LCC).covar);
                                                  ^~~~~~~~~
<kernel>:285:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:285:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:285:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:285:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:287:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid)
             ^~~~~~~~~
<kernel>:292:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isNiter)
             ^~~~~~~~~
<kernel>:294:8: error: indirection requires pointer operand ('int' invalid)
                if ((*CUDA_LCC).Niter == 1 || (*CUDA_LCC).Chisq < (*CUDA_LCC).Ochisq)
                     ^~~~~~~~~
<kernel>:294:34: error: indirection requires pointer operand ('int' invalid)
                if ((*CUDA_LCC).Niter == 1 || (*CUDA_LCC).Chisq < (*CUDA_LCC).Ochisq)
                                               ^~~~~~~~~
<kernel>:294:54: error: indirection requires pointer operand ('int' invalid)
                if ((*CUDA_LCC).Niter == 1 || (*CUDA_LCC).Chisq < (*CUDA_LCC).Ochisq)
                                                                   ^~~~~~~~~
<kernel>:296:8: error: use of undeclared identifier 'threadIdx'
                        if (threadIdx.x == 0)
                            ^
<kernel>:298:6: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).Ochisq = (*CUDA_LCC).Chisq;
                                 ^~~~~~~~~
<kernel>:298:27: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).Ochisq = (*CUDA_LCC).Chisq;
                                                      ^~~~~~~~~
<kernel>:302:9: warning: type specifier missing, defaults to 'int'
                        auto brtmph = CUDA_Numfac / CUDA_BLOCK_DIM;
                        ~~~~ ^
<kernel>:302:18: error: use of undeclared identifier 'CUDA_Numfac'
                        auto brtmph = CUDA_Numfac / CUDA_BLOCK_DIM;
                                      ^
<kernel>:302:32: error: use of undeclared identifier 'CUDA_BLOCK_DIM'
                        auto brtmph = CUDA_Numfac / CUDA_BLOCK_DIM;
                                                    ^
<kernel>:303:8: error: use of undeclared identifier 'CUDA_Numfac'
                        if (CUDA_Numfac % CUDA_BLOCK_DIM) brtmph++;
                            ^
<kernel>:303:22: error: use of undeclared identifier 'CUDA_BLOCK_DIM'
                        if (CUDA_Numfac % CUDA_BLOCK_DIM) brtmph++;
                                          ^
<kernel>:304:17: error: use of undeclared identifier 'threadIdx'
                        int brtmpl = threadIdx.x * brtmph;
                                     ^
<kernel>:306:17: error: use of undeclared identifier 'CUDA_Numfac'
                        if (brtmph > CUDA_Numfac) brtmph = CUDA_Numfac;
                                     ^
<kernel>:306:39: error: use of undeclared identifier 'CUDA_Numfac'
                        if (brtmph > CUDA_Numfac) brtmph = CUDA_Numfac;
                                                           ^
<kernel>:309:4: warning: implicit declaration of function 'curv' is invalid in C99
                        curv(CUDA_LCC, (*CUDA_LCC).cg, brtmpl, brtmph);
                        ^
<kernel>:309:20: error: indirection requires pointer operand ('int' invalid)
                        curv(CUDA_LCC, (*CUDA_LCC).cg, brtmpl, brtmph);
                                        ^~~~~~~~~
<kernel>:311:8: error: use of undeclared identifier 'threadIdx'
                        if (threadIdx.x == 0)
                            ^
<kernel>:313:15: warning: type specifier missing, defaults to 'int'
                                for (auto i = 1; i <= 3; i++)
                                     ~~~~ ^
<kernel>:315:7: error: indirection requires pointer operand ('int' invalid)
                                        (*CUDA_LCC).chck[i] = 0;
                                         ^~~~~~~~~
<kernel>:316:16: warning: type specifier missing, defaults to 'int'
                                        for (auto j = 1; j <= CUDA_Numfac; j++)
                                             ~~~~ ^
<kernel>:316:28: error: use of undeclared identifier 'CUDA_Numfac'
                                        for (auto j = 1; j <= CUDA_Numfac; j++)
                                                              ^
<kernel>:318:8: error: indirection requires pointer operand ('int' invalid)
                                                (*CUDA_LCC).chck[i] = (*CUDA_LCC).chck[i] + (*CUDA_LCC).Area[j] * CUDA_Nor[j][i - 1];
                                                 ^~~~~~~~~
<kernel>:318:30: error: indirection requires pointer operand ('int' invalid)
                                                (*CUDA_LCC).chck[i] = (*CUDA_LCC).chck[i] + (*CUDA_LCC).Area[j] * CUDA_Nor[j][i - 1];
                                                                       ^~~~~~~~~
<kernel>:318:52: error: indirection requires pointer operand ('int' invalid)
                                                (*CUDA_LCC).chck[i] = (*CUDA_LCC).chck[i] + (*CUDA_LCC).Area[j] * CUDA_Nor[j][i - 1];
                                                                                             ^~~~~~~~~
<kernel>:318:73: error: use of undeclared identifier 'CUDA_Nor'
                                                (*CUDA_LCC).chck[i] = (*CUDA_LCC).chck[i] + (*CUDA_LCC).Area[j] * CUDA_Nor[j][i - 1];
                                                                                                                  ^
<kernel>:321:6: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).rchisq = (*CUDA_LCC).Chisq - (pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2)) * pow(CUDA_conw_r, 2);
                                 ^~~~~~~~~
<kernel>:321:27: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).rchisq = (*CUDA_LCC).Chisq - (pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2)) * pow(CUDA_conw_r, 2);
                                                      ^~~~~~~~~
<kernel>:321:52: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).rchisq = (*CUDA_LCC).Chisq - (pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2)) * pow(CUDA_conw_r, 2);
                                                                               ^~~~~~~~~
<kernel>:321:82: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).rchisq = (*CUDA_LCC).Chisq - (pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2)) * pow(CUDA_conw_r, 2);
                                                                                                             ^~~~~~~~~
<kernel>:321:112: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).rchisq = (*CUDA_LCC).Chisq - (pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2)) * pow(CUDA_conw_r, 2);
                                                                                                                                           ^~~~~~~~~
<kernel>:321:142: error: use of undeclared identifier 'CUDA_conw_r'
                                (*CUDA_LCC).rchisq = (*CUDA_LCC).Chisq - (pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2)) * pow(CUDA_conw_r, 2);
                                                                                                                                                                         ^
<kernel>:324:7: error: use of undeclared identifier 'threadIdx'
                if (threadIdx.x == 0)
                    ^
<kernel>:326:5: error: indirection requires pointer operand ('int' invalid)
                        (*CUDA_LCC).dev_new = sqrt((*CUDA_LCC).rchisq / (CUDA_ndata - 3));
                         ^~~~~~~~~
<kernel>:326:32: error: indirection requires pointer operand ('int' invalid)
                        (*CUDA_LCC).dev_new = sqrt((*CUDA_LCC).rchisq / (CUDA_ndata - 3));
                                                    ^~~~~~~~~
<kernel>:326:53: error: use of undeclared identifier 'CUDA_ndata'
                        (*CUDA_LCC).dev_new = sqrt((*CUDA_LCC).rchisq / (CUDA_ndata - 3));
                                                                         ^
<kernel>:329:9: error: indirection requires pointer operand ('int' invalid)
                        if ((*CUDA_LCC).dev_old - (*CUDA_LCC).dev_new > 1e-10)
                             ^~~~~~~~~
<kernel>:329:31: error: indirection requires pointer operand ('int' invalid)
                        if ((*CUDA_LCC).dev_old - (*CUDA_LCC).dev_new > 1e-10)
                                                   ^~~~~~~~~
<kernel>:331:6: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).iter_diff = (*CUDA_LCC).dev_old - (*CUDA_LCC).dev_new;
                                 ^~~~~~~~~
<kernel>:331:30: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).iter_diff = (*CUDA_LCC).dev_old - (*CUDA_LCC).dev_new;
                                                         ^~~~~~~~~
<kernel>:331:52: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).iter_diff = (*CUDA_LCC).dev_old - (*CUDA_LCC).dev_new;
                                                                               ^~~~~~~~~
<kernel>:332:6: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).dev_old = (*CUDA_LCC).dev_new;
                                 ^~~~~~~~~
<kernel>:332:28: error: indirection requires pointer operand ('int' invalid)
                                (*CUDA_LCC).dev_old = (*CUDA_LCC).dev_new;
                                                       ^~~~~~~~~
<kernel>:341:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:341:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:341:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:341:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:342:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:342:25: error: use of undeclared identifier 'CUDA_FR'; did you mean 'CUDA_LFR'?
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^~~~~~~
                               CUDA_LFR
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:342:25: error: reference to local variable 'CUDA_LFR' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:342:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                                       ^
<kernel>:344:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:347:12: warning: type specifier missing, defaults to 'int'
        for (auto i = 1; i <= CUDA_Numfac; i++)
             ~~~~ ^
<kernel>:347:24: error: use of undeclared identifier 'CUDA_Numfac'
        for (auto i = 1; i <= CUDA_Numfac; i++)
                              ^
<kernel>:349:24: error: indirection requires pointer operand ('int' invalid)
                totarea = totarea + (*CUDA_LCC).Area[i];
                                     ^~~~~~~~~
<kernel>:352:13: warning: type specifier missing, defaults to 'int'
        const auto sum = pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2);
        ~~~~~~~~~~ ^
<kernel>:352:24: error: indirection requires pointer operand ('int' invalid)
        const auto sum = pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2);
                              ^~~~~~~~~
<kernel>:352:54: error: indirection requires pointer operand ('int' invalid)
        const auto sum = pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2);
                                                            ^~~~~~~~~
<kernel>:352:84: error: indirection requires pointer operand ('int' invalid)
        const auto sum = pow((*CUDA_LCC).chck[1], 2) + pow((*CUDA_LCC).chck[2], 2) + pow((*CUDA_LCC).chck[3], 2);
                                                                                          ^~~~~~~~~
<kernel>:353:13: warning: type specifier missing, defaults to 'int'
        const auto dark = sqrt(sum);
        ~~~~~~~~~~ ^
<kernel>:353:20: error: call to 'sqrt' is ambiguous
        const auto dark = sqrt(sum);
                          ^~~~
cl_kernel.h:1751:25: note: candidate function
double __OVERLOADABLE__ sqrt(double);
                        ^
cl_kernel.h:1752:25: note: candidate function
float2 __OVERLOADABLE__ sqrt(float2); 
                        ^
cl_kernel.h:1754:25: note: candidate function
float3 __OVERLOADABLE__ sqrt(float3); 
                        ^
cl_kernel.h:1756:25: note: candidate function
float4 __OVERLOADABLE__ sqrt(float4); 
                        ^
cl_kernel.h:1757:25: note: candidate function
float8 __OVERLOADABLE__ sqrt(float8); 
                        ^
cl_kernel.h:1758:26: note: candidate function
float16 __OVERLOADABLE__ sqrt(float16); 
                         ^
cl_kernel.h:1759:26: note: candidate function
double2 __OVERLOADABLE__ sqrt(double2); 
                         ^
cl_kernel.h:1761:26: note: candidate function
double3 __OVERLOADABLE__ sqrt(double3); 
                         ^
cl_kernel.h:1763:26: note: candidate function
double4 __OVERLOADABLE__ sqrt(double4); 
                         ^
cl_kernel.h:1764:26: note: candidate function
double8 __OVERLOADABLE__ sqrt(double8); 
                         ^
cl_kernel.h:1765:27: note: candidate function
double16 __OVERLOADABLE__ sqrt(double16); 
                          ^
cl_kernel.h:6275:24: note: candidate function
float __OVERLOADABLE__ sqrt(float in);
                       ^
<kernel>:356:13: warning: type specifier missing, defaults to 'int'
        const auto period = 2 * PI / (*CUDA_LCC).cg[CUDA_Ncoef + 3];
        ~~~~~~~~~~ ^
<kernel>:356:26: error: use of undeclared identifier 'PI'
        const auto period = 2 * PI / (*CUDA_LCC).cg[CUDA_Ncoef + 3];
                                ^
<kernel>:356:32: error: indirection requires pointer operand ('int' invalid)
        const auto period = 2 * PI / (*CUDA_LCC).cg[CUDA_Ncoef + 3];
                                      ^~~~~~~~~
<kernel>:356:46: error: use of undeclared identifier 'CUDA_Ncoef'
        const auto period = 2 * PI / (*CUDA_LCC).cg[CUDA_Ncoef + 3];
                                                    ^
<kernel>:359:13: warning: type specifier missing, defaults to 'int'
        const auto la_tmp = RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
        ~~~~~~~~~~ ^
<kernel>:359:22: error: use of undeclared identifier 'RAD2DEG'
        const auto la_tmp = RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                            ^
<kernel>:359:33: error: indirection requires pointer operand ('int' invalid)
        const auto la_tmp = RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                                       ^~~~~~~~~
<kernel>:359:47: error: use of undeclared identifier 'CUDA_Ncoef'
        const auto la_tmp = RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 2];
                                                     ^
<kernel>:360:13: warning: type specifier missing, defaults to 'int'
        const auto be_tmp = 90 - RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
        ~~~~~~~~~~ ^
<kernel>:360:27: error: use of undeclared identifier 'RAD2DEG'
        const auto be_tmp = 90 - RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                 ^
<kernel>:360:38: error: indirection requires pointer operand ('int' invalid)
        const auto be_tmp = 90 - RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                            ^~~~~~~~~
<kernel>:360:52: error: use of undeclared identifier 'CUDA_Ncoef'
        const auto be_tmp = 90 - RAD2DEG * (*CUDA_LCC).cg[CUDA_Ncoef + 1];
                                                          ^
<kernel>:362:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).dev_new < (*CUDA_LFR).dev_best)
             ^~~~~~~~~
<kernel>:362:29: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).dev_new < (*CUDA_LFR).dev_best)
                                   ^~~~~~~~~
<kernel>:364:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).dev_best = (*CUDA_LCC).dev_new;
                 ^~~~~~~~~
<kernel>:364:27: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).dev_best = (*CUDA_LCC).dev_new;
                                        ^~~~~~~~~
<kernel>:365:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).per_best = period;
                 ^~~~~~~~~
<kernel>:366:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).dark_best = dark / totarea * 100;
                 ^~~~~~~~~
<kernel>:367:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).la_best = la_tmp;
                 ^~~~~~~~~
<kernel>:368:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).be_best = be_tmp;
                 ^~~~~~~~~
<kernel>:380:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:380:25: error: use of undeclared identifier 'CUDA_CC'; did you mean 'CUDA_LCC'?
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^~~~~~~
                               CUDA_LCC
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:380:25: error: reference to local variable 'CUDA_LCC' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                               ^
<kernel>:43:13: note: 'CUDA_LCC' declared here
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                   ^
<kernel>:380:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LCC = &CUDA_CC[blockIdx.x];
                                       ^
<kernel>:381:13: warning: type specifier missing, defaults to 'int'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
        ~~~~~~~~~~ ^
<kernel>:381:25: error: use of undeclared identifier 'CUDA_FR'; did you mean 'CUDA_LFR'?
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^~~~~~~
                               CUDA_LFR
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:381:25: error: reference to local variable 'CUDA_LFR' declared in enclosing function 'CudaCalculatePreparePole'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                               ^
<kernel>:44:13: note: 'CUDA_LFR' declared here
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                   ^
<kernel>:381:33: error: use of undeclared identifier 'blockIdx'
        const auto CUDA_LFR = &CUDA_FR[blockIdx.x];
                                       ^
<kernel>:383:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LCC).isInvalid) return;
             ^~~~~~~~~
<kernel>:385:7: error: indirection requires pointer operand ('int' invalid)
        if ((*CUDA_LFR).la_best < 0)
             ^~~~~~~~~
<kernel>:386:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).la_best += 360;
                 ^~~~~~~~~
<kernel>:388:13: error: indirection requires pointer operand ('int' invalid)
        if (isnan((*CUDA_LFR).dark_best) == 1)
                   ^~~~~~~~~
<kernel>:389:4: error: indirection requires pointer operand ('int' invalid)
                (*CUDA_LFR).dark_best = 1.0;
                 ^~~~~~~~~

20:03:56 (52172): Can't open init data file - running in standalone mode
Platform vendor: NVIDIA Corporation
OpenCL version: OpenCL C 1.2  | OpenCL 1.2 CUDA
OpenCL Device number : 0
OpenCl Device name: GeForce GTX 1050 Ti 4096MB
Multiprocessors: 6
Max Samplers: 32
Max work item dimensions: 3
CL_DEVICE_EXTENSIONScl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_d3d10_sharing cl_khr_d3d10_sharing cl_nv_d3d11_sharing cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
20:29:14 (26092): Can't open init data file - running in standalone mode
Platform vendor: NVIDIA Corporation
OpenCL version: OpenCL C 1.2  | OpenCL 1.2 CUDA
OpenCL Device number : 0
OpenCl Device name: GeForce GTX 1050 Ti 4096MB
Multiprocessors: 6
Max Samplers: 32
Max work item dimensions: 3
CL_DEVICE_EXTENSIONScl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_d3d10_sharing cl_khr_d3d10_sharing cl_nv_d3d11_sharing cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
20:30:44 (60144): Can't open init data file - running in standalone mode
Platform vendor: NVIDIA Corporation
OpenCL version: OpenCL C 1.2  | OpenCL 1.2 CUDA
OpenCL Device number : 0
OpenCl Device name: GeForce GTX 1050 Ti 4096MB
Multiprocessors: 6
Max Samplers: 32
Max work item dimensions: 3
CL_DEVICE_EXTENSIONScl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_d3d10_sharing cl_khr_d3d10_sharing cl_nv_d3d11_sharing cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
20:53:12 (59500): Can't open init data file - running in standalone mode
Platform vendor: NVIDIA Corporation
OpenCL version: OpenCL C 1.2  | OpenCL 1.2 CUDA
OpenCL Device number : 0
OpenCl Device name: GeForce GTX 1050 Ti 4096MB
Multiprocessors: 6
Max Samplers: 32
Max work item dimensions: 3
CL_DEVICE_EXTENSIONScl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_d3d10_sharing cl_khr_d3d10_sharing cl_nv_d3d11_sharing cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
Build log for GeForce GTX 1050 Ti:
<kernel>:7:21: error: invalid address space for pointee of pointer argument to __kernel function
        write_only double* freq,
                           ^

20:54:00 (28544): Can't open init data file - running in standalone mode
Platform vendor: NVIDIA Corporation
OpenCL version: OpenCL C 1.2  | OpenCL 1.2 CUDA
OpenCL Device number : 0
OpenCl Device name: GeForce GTX 1050 Ti 4096MB
Multiprocessors: 6
Max Samplers: 32
Max work item dimensions: 3
CL_DEVICE_EXTENSIONScl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_d3d10_sharing cl_khr_d3d10_sharing cl_nv_d3d11_sharing cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
