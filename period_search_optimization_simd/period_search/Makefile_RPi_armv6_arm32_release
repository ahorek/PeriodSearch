# This should work on Linux.  Modify as needed for other platforms.
#
#	The following Makefile produces armv6 32bit period-search application. Built and tested on "RPi 4B+" w/2GB, running 32-bit Buster armhf distro 2019-06-20.
#   Here is a linkg to the distro: https://downloads.raspberrypi.com/raspbian_lite/images/raspbian_lite-2019-06-24/
#   Or you can try the newer Buster armhf image: https://downloads.raspberrypi.org/raspios_armhf/images/raspios_armhf-2021-05-28/ (Not fully tested yet)
#	Try to use environment based on GLIBC v2.28
#   Before you start you might need to install the following packages:
#
#	Prepare BOINC API as follows:	
#		./_autosetup # Only first time
#		./configure --disable-server --disable-client --disable-manager CXXFLAGS="-std=c++2a -O3"
#		or
#		./configure --disable-server --disable-client --disable-manager --build=arm-linux-gnueabihf --target=arm-linux-gnueabi CC="arm-linux-gnueabihf-g++" CXX="arm-linux-gnueabihf-g++" CPP="arm-linux-gnueabihf-g++ -E" CXXFLAGS="-marm -mtune=arm1176jzf-s -mcpu=arm6z -mfloat-abi=hard -mfpu=vfp -std=c++2a -O3"
#		make
#
#	To check for the supported macroses use:
#		echo | g++ -dM -E -
#		echo | arm-linux-gnueabihf-g++ -dM -E -
#		echo | clang++ -dM -E -
#

BUILD_DIR = build
BOINC_DIR = ../../../boinc_src_armv6
BOINC_API_DIR = $(BOINC_DIR)/api
BOINC_LIB_DIR = $(BOINC_DIR)/lib
PS_COMMON_DIR = ../../period_search_common
PS_COMMON_LIB_DIR = $(PS_COMMON_DIR)/build

CXX = g++
# Use `readelf -p .GCC.command.line period_search_rpi_armv6_arm32` to see all used compiler commands
CXXFLAGS = -march=armv6 -O3 -std=c++2a -w -s -frecord-gcc-switches -mtune=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp \
    -DARM32 \
	-I$(BOINC_DIR) \
	-I$(BOINC_LIB_DIR) \
	-I$(BOINC_API_DIR) \
	-I$(PS_COMMON_DIR) \
	-L$(PS_COMMON_LIB_DIR) \
	-L/usr/X11R6/lib \
	-L.

# Define the target executable
TARGET = $(BUILD_DIR)/period_search_rpi_armv6_arm32

# Define the source files
SRC = areanorm.cpp blmatrix.cpp bright.cpp \
	conv.cpp \
	covsrt.cpp CpuInfoArm32.cpp curv.cpp \
	ellfit.cpp EnumHelpers.cpp gauss_errc.cpp \
	lubksb.cpp ludcmp.cpp matrix.cpp \
	mrqcof.cpp \
	mrqmin.cpp phasec.cpp sphfunc.cpp systeminfo.cpp \
	trifac.cpp VersionInfo.cpp period_search_BOINC.cpp
# Define the object files
OBJ = $(SRC:%.cpp=$(BUILD_DIR)/%.o)

# Default target to build the executable
all: $(BUILD_DIR) $(TARGET)

# Rule to create build directory
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

 # Rule to build the static library
$(TARGET): $(OBJ) $(BOINC_LIB_DIR)/libboinc.a $(BOINC_API_DIR)/libboinc_api.a $(PS_COMMON_LIB_DIR)/libps_common.a
	$(CXX) $(CXXFLAGS) -o $@ $(OBJ) -pthread \
	$(PS_COMMON_LIB_DIR)/libps_common.a \
	$(BOINC_API_DIR)/libboinc_api.a \
	$(BOINC_LIB_DIR)/libboinc.a \
	-lm

# Rule to build object files
$(BUILD_DIR)/%.o: %.cpp
	@mkdir -p $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean rule to remove compiled files
clean:
	rm -rf $(BUILD_DIR)

.PHONY: all clean
