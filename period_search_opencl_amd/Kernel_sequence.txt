
kernelCalculatePrepare

for (m = 1; m <= N_POLES; m++)
{
	kernelCalculatePreparePole
	
	while (!theEnd)
	{
		kernelCalculateIter1Begin
		kernelCalculateIter1Mrqcof1Start
	
		for (iC = 1; iC < l_curves; iC++)
		{
			kernelCalculateIter1Mrqcof1Matrix	- OK	26.09.2020
			kernelCalculateIter1Mrqcof1Curve1	- OK	06.10.2020
			kernelCalculateIter1Mrqcof1Curve2	- OK	07.10.2020
		}
	
		kernelCalculateIter1Mrqcof1Curve1Last	- OK 08.10.2020
		kernelCalculateIter1Mrqcof1Curve2		- OK 08.10.2020
		kernelCalculateIter1Mrqcof1End			- OK 08.10.2020
		kernelCalculateIter1Mrqmin1End			- OK 09.10.2020
		kernelCalculateIter1Mrqcof2Start		- OK 09.10.2020
	
		for (iC = 1; iC < l_curves; iC++)
		{
			kernelCalculateIter1Mrqcof2Matrix
			kernelCalculateIter1Mrqcof2Curve1
			kernelCalculateIter1Mrqcof2Curve2
		}
	
		kernelCalculateIter1Mrqcof2Curve1Last
		kernelCalculateIter1Mrqcof2Curve2
		kernelCalculateIter1Mrqcof2End
		kernelCalculateIter1Mrqmin2End
		kernelCalculateIter2
	}

	kernelCalculateFinishPole
}

kernelCalculateFinish